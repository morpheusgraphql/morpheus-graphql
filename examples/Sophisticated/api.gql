# for Input Union

input Cat {
  name: String!
}

input Dog {
  name: String!
}

input Bird {
  name: String!
}

# Main APi

enum CityID {
  """
  temporary multiline Test for Enum field comments

  """
  Paris
  BLN @testDirective(testName:"")
  "temporary singleline Test for Enum field comments"
  HH
}

input Coordinates {
  latitude: Euro! @testDirective(testName:"")
  "temporary singleline Test for input object field comments"
  longitude: [[[UniqueID!]!]]!
}

input UniqueID {
  """
    temporary multiline Test for Enum field comments

  """
  type: String,
  id: String!
}

type Address {
  city: String!  @deprecated(testName:"",testName2: 123)
  street: String!
  houseNumber: Int!
}

"""
my custom description for user
"""
type User {
  name: String!
  email: String!
  address(coordinates: Coordinates!, comment: String): Address!
  home: CityID!
  office(zipCode: [[[ID!]]!], id: CityID!): Address
  entity: MyUnion
}

union MyUnion = User | Address

type Query {
  user: User!
  animal(animal: Animal): String!
  wrapped1(type: UniqueID): AIntText!
  wrapped2: AText!
  set: SetInt!
  map: MapTextInt!
}

type Mutation {
  createUser: User!
  createAddress: Address!
}

type Subscription {
  newAddress: Address!
  newUser: User!
}
