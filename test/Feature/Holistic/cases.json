[
  {
    "path": "fragment/loopingFragment",
    "description": "fail when: fragment directly or indirectly references itself"
  },
  {
    "path": "arguments/unknownArguments",
    "description": "fail when: argument on field is not recognised by the schema"
  },
  {
    "path": "arguments/nameConflict",
    "description": "fail when: argument names on field are not unique"
  },
  {
    "path": "arguments/undefinedArgument",
    "description": "fail when: required argument is not defined in selection "
  },
  {
    "path": "selection/unknownField",
    "description": "fail when: selected field does not exist on type"
  },
  {
    "path": "selection/hasNoSubFields",
    "description": "fail when: selected subFields on non object type"
  },
  {
    "path": "selection/mustHaveSubFields",
    "description": "fail when: is not selected subFields on object type"
  },
  {
    "path": "selection/nameConflict",
    "description": "fail when: selected fields has same name"
  },
  {
    "path": "selection/AliasNameConflict",
    "description": "fail when: selected alias has same name"
  },
  {
    "path": "selection/AliasResolve",
    "description": "resolves same field with different name"
  },
  {
    "path": "selection/AliasUnknownField",
    "description": "fail when: selected field in alias does not exist on type"
  },
  {
    "path": "fragment/inlineFragment",
    "description": "returns field selected by inline Fragment"
  },
  {
    "path": "fragment/inlineFragmentTypeMismatch",
    "description": "fail when: inline fragment type is incompatible with object type"
  },
  {
    "path": "fragment/cannotBeSpreadOnType",
    "description": "fail when: fragment type is incompatible with object type"
  }
]