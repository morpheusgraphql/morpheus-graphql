enum TestEnum {
  EnumA
  EnumB
  EnumC
}

input NestedInputObject {
  fieldTestID: ID!
}

input TestInputObject {
  fieldTestScalar: TestScalar!
  fieldNestedInputObject: [NestedInputObject]!
}

input Coordinates {
  latitude: TestScalar!
  longitude: Int!
}

type Address {
  city: Text!
  street(
    argInputObject: TestInputObject!
    argMaybeString: Text
  ): [[[[Text!]!]!]]
  houseNumber: Int!
}

union TestUnion = User | Address

type User {
  name: Text!
  email: Text!
  address(coordinates: Coordinates!, comment: Text): Address!
  office(zipCode: [Int!], cityID: TestEnum!): Address!
  friend: User
}

type Query {
  user: User!
  testUnion: TestUnion
}
