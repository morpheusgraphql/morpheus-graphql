[
  {
    "path": "variables/unusedVariable/unusedVariables",
    "description": "fail when: variable is defined by the operation but did not used in selection"
  },
  {
    "path": "variables/unusedVariable/variableUsedInFragment",
    "description": "don't fail when: variable is defined by the operation and used in Fragment"
  },
  {
    "path": "variables/unusedVariable/variableUsedInInlineFragment",
    "description": "don't fail when: variable is defined by the operation and used in inline Fragment"
  },
  {
    "path": "variables/unusedVariable/variableUsedInAlias",
    "description": "don't fail when: variable is defined by the operation and used in Alias"
  },
  {
    "path": "variables/valueNotProvided/nonNullVariable",
    "description": "fail when: variable is defined by the operation but can't found on request body"
  },
  {
    "path": "variables/valueNotProvided/nullableVariable",
    "description": "don't fail when: variable is defined by the operation but can't found on request body"
  },
  {
    "path": "variables/valueNotProvided/nonNullVariableWithDefaultValue",
    "description": "don't fail when: not nullable variable was not provided but has default value"
  },
  {
    "path": "variables/invalidValue/invalidListVariable",
    "description": "fail when: variable receives invalid List value"
  },
  {
    "path": "variables/invalidValue/nestedListNonNullListReceivedNull",
    "description": "fail: if list of nonNull elements receives null"
  },
  {
    "path": "variables/invalidValue/invalidDefaultValue",
    "description": "fail: if default value is incompatible"
  },
  {
    "path": "variables/invalidValue/invalidDefaultValueButVariableProvided",
    "description": "fail: if default value is incompatible eve if correct variable value was provided"
  },
  {
    "path": "variables/nestedListNullableListReceivedNull",
    "description": "resolve: if list of nullable elements receives null"
  },
  {
    "path": "variables/unknownType",
    "description": "fail when: variable type does not exists"
  },
  {
    "path": "variables/undefinedVariable",
    "description": "fail when: referenced variable is not defined"
  },
  {
    "path": "variables/incompatibleType/equalType",
    "description": "equal types are valid"
  },
  {
    "path": "variables/incompatibleType/stricterType",
    "description": "stricter types are valid"
  },
  {
    "path": "variables/incompatibleType/weakerType1",
    "description": "weaker types are invalid"
  },
  {
    "path": "variables/incompatibleType/weakerType2",
    "description": "weaker types are invalid"
  },
  {
    "path": "variables/incompatibleType/weakerType3",
    "description": "weaker types are invalid"
  },
  {
    "path": "variables/nameCollision",
    "description": "fail on: variable name collision"
  }
]