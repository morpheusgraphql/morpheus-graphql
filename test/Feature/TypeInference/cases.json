[
  {
    "path": "introspection/object",
    "description": "derives simple gql object type"
  },
  {
    "path": "introspection/enum",
    "description": "derive as gql enum, if type has only empty constructors"
  },
  {
    "path": "introspection/union/union",
    "description": "derive complex union"
  },
  {
    "path": "introspection/union/nullary-constructors",
    "description": "empty constructors receive single field with empty type"
  },
  {
    "path": "introspection/union/named-products",
    "description": "creates object type for every union records"
  },
  {
    "path": "introspection/union/scalars",
    "description": "all scalar unions must be boxed"
  },
  {
    "path": "introspection/union/positional-products",
    "description": "all types without record syntax(indexed types), will be converted to gql object with fields _0,_1...."
  },
  {
    "path": "introspection/inputObject",
    "description": "introspect input object"
  },
  {
    "path": "introspection/complexInput",
    "description": "introspect complex input"
  },
  {
    "path": "resolving/object",
    "description": "resolve regular object"
  },
  {
    "path": "resolving/complexUnion",
    "description": "resolve regular object"
  },
  {
    "path": "resolving/input",
    "description": "resolve input"
  }
]
