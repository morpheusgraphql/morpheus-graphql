[
  {
    "path": "decode2Con",
    "description": "decode string to correct Haskell Enum Representation"
  },
  {
    "path": "decode3Con",
    "description": "decode string to correct Haskell Enum Representation"
  },
  {
    "path": "decodeMany/con0",
    "description": "decode string to correct Haskell Enum Representation"
  },
  {
    "path": "decodeMany/con1",
    "description": "decode string to correct Haskell Enum Representation"
  },
  {
    "path": "decodeMany/con2",
    "description": "decode string to correct Haskell Enum Representation"
  },
  {
    "path": "decodeMany/con3",
    "description": "decode string to correct Haskell Enum Representation"
  },
  {
    "path": "decodeMany/con4",
    "description": "decode string to correct Haskell Enum Representation"
  },
  {
    "path": "decodeMany/con5",
    "description": "decode string to correct Haskell Enum Representation"
  },
  {
    "path": "decodeMany/con6",
    "description": "decode string to correct Haskell Enum Representation"
  },
  {
    "path": "decodeInvalidValue",
    "description": "fail on invalid enum value"
  },
  {
    "path": "invalidStringInput",
    "description": "fail on String inputs for Enum Values"
  },
  {
    "path": "invalidStringDefaultValue",
    "description": "fail on String inputs for Enum Values"
  },
  {
    "path": "validEnumFromJSONVariable",
    "description": "accept strings as enum if it is received from json variable"
  },
  {
    "path": "invalidEnumFromJSONVariable",
    "description": "reject invalid strings as enum from json variable"
  }
]
